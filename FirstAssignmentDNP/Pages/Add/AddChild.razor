@page "/AddChild/{IdFamily:int}"
@using Models
@using FirstAssignmentDNP.Data
@using FileData
@using System.IO
@inject IUsersData UsersData
@inject FileContext FileContext
@inject NavigationManager NavigationManager

@if (_family == null)
{
    <div class="text-center">
        <h1>This family does not exist.</h1>
    </div>
}
else
{
    <div class="align-content-lg-center">
        <EditForm Model="@_newChild">
            <h3>Add Child</h3>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <span class="input-group-text">Firstname</span>
                    <input type="text" placeholder="Firstname" class="form-control" @bind-value="_newChild.FirstName"/>
                </div>
                <div class="form-group col-md-6">
                    <span class="input-group-text">Hair and eye color</span>
                    <input type="text" placeholder="Hair color" class="form-control" @bind-value="_newChild.HairColor"/>
                    <input type="text" placeholder="Eye color" class="form-control"@bind-value="_newChild.EyeColor"/>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    <span class="input-group-text">Age</span>
                    <input type="number" class="form-control" @bind-value="_newChild.Age"/>
                    <span class="input-group-text">years</span>
                </div>
                <div class="form-group col-md-4">

                </div>
                <div class="form-group col-md-4">

                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <span class="input-group-text">Weight and height</span>
                    <input type="number" placeholder="Weight" class="form-control" @bind-value="_newChild.Weight"/>
                    <input type="number" placeholder="Height" class="form-control" @bind-value="_newChild.Height"/>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <span class="input-group-text">Sex</span>
                    <input type="text" class="form-control" @bind-value="_newChild.Sex"/>
                </div>
                <div class="form-group col-md-4">

                </div>
                <div class="form-group col-md-4">

                </div>
            </div>
            <div class="form-group">
                <button class="btn btn-primary btn-sm" @onclick="AddPersonToFamily">Add</button>
            </div>
            <div style="color:red">
                @errorMessage
            </div>
        </EditForm>
    </div>
}

@code {

    [Parameter]
    public int IdFamily { get; set; }

    private Child _newChild = new Child();
    private Family _family = new Family();
    private string errorMessage;

    protected override async Task OnParametersSetAsync()
    {
        _family = FileContext.Families.First(f => f.Id == IdFamily);
    }

    public void AddPersonToFamily()
    {
        int max = 0;
        foreach (var family in FileContext.Families)
        {
            int currentMax = 0;
            if (_family.Pets.Count > 0)
                currentMax = family.Pets.Max(p => p.Id);
            if (currentMax > max)
                max = currentMax;
        }
        _newChild.Id = (++max);
        _newChild.Photo = "default.png";
        _newChild.Interests = new List<Interest>();
        _newChild.Pets = new List<Pet>();
        int indexOfFamily = FileContext.Families.IndexOf(_family);
        FileContext.Families[indexOfFamily].Children.Add(_newChild);
        FileContext.SaveChanges();
        NavigationManager.NavigateTo($"/FamilyInfo/{IdFamily}");
    }

}