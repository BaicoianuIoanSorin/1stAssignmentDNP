@page "/AddFamily/{Id:int}"
@using Models
@using FirstAssignmentDNP.Data
@inject IUsersData UsersData
@inject IFamiliesData FamiliesData
@inject NavigationManager NavigationManager

@if (_user.Person == null)
{
    <div class="text-center">
        <h1>You don't have all your informations given.</h1>
        <h1>Would you like to add?</h1>
        <button class="btn btn-primary" @onclick="AddPersonToUser">Add</button>
    </div>
}
else
{
    <EditForm Model="@_family">
        <div class="form-group col-md-6">
                <label for="inputNumber">House Number</label>
                <input type="number" id="inputNumber" class="form-control col-md-2" @bind-value="_family.HouseNumber"/>
            </div>
        <div class="form-group col-md-4">
                        <label for="inputStreetName">Street Name</label>
                        <input type="text" class="form-control" id="inputStreetName" @bind-value="_family.StreetName"/>
                    </div>
        <button type="submit" class="btn btn-primary" @onclick="AddFamilyToUser">Add</button>
    </EditForm>
}
@code {
    [Parameter] 
    public int Id { get; set; }

    private User _user;
    private Family _family = new Family();

    protected override async Task OnParametersSetAsync()
    {
        _user = await UsersData.GetUserAsync(Id);
    }

    public void AddFamilyToUser()
    {
        
        UsersData.AddFamilyToUserAsync(_family, Id);
        FamiliesData.AddFamilyAsync(_family);
        NavigationManager.NavigateTo("/Families");
    }

    public void AddPersonToUser()
    {
    NavigationManager.NavigateTo($"/AddPersonToUser/{Id}");
    }
    

}